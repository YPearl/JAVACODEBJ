<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.dao.DepartmentMapper">
	
	<!-- public Department getDeptById(Integer id); -->
	<select id="getDeptById" resultType="com.atguigu.mybatis.bean.Department" databaseId="mysql">
		select id,dept_name departmentName from tbl_tept where id = #{id}
	</select>
	
	
	<!-- 
		collection嵌套结果集的方式,定义关联的集合类型元素的封装规则
	 -->
	 <!-- 嵌套结果集的方式，使用conllection标签定义关联的集合类型的属性封装规则 -->
	<resultMap type="com.atguigu.mybatis.bean.Department" id="MyDept">
		<id column="did" property="id" />
		<result column="dept_name" property="departmentName" />
		<!-- 
		collection定义集合类型的属性的封装规则 
			ofType:指定集合里面元素的类型
		-->
		<collection property="emps" ofType="employee">
			<!-- 定义这个集合中元素的封装规则 -->
			<id column="eid" property="id" />
			<result column="last_name" property="lastName" />
			<result column="email" property="email" />
			<result column="gender" property="gender" />
		</collection>
	</resultMap>
	<!-- public Department getDeptByIdPlus(Integer id); -->
	<select id="getDeptByIdPlus" resultMap="MyDept" databaseId="mysql">
		select d.id did,d.dept_name dept_name,
		e.id eid,e.last_name last_name,e.email email,
		e.gender gender
		FROM tbl_tept d
		LEFT JOIN tbl_employee e
		ON d.id=e.d_id
		where d.id=#{id}
	</select>
	
	<resultMap type="com.atguigu.mybatis.bean.Department" id="MyDeptStep">
		<id column="id" property="id"/>
		<result column="dept_name" property="departmentName"/>
		<collection property="emps"
			select="com.atguigu.mybatis.dao.EnployeeMapperPlus.getEmpsByDeptId"
			column="id" fetchType="lazy">
		</collection>
	</resultMap>
	<!-- public Department getDeptByIdStep(Integer id); -->
	<select id="getDeptByIdStep" resultMap="MyDeptStep">
		select id,dept_name from tbl_tept where id = #{id}
	</select>
	
	<!-- 
		扩展：多列的值传递过去：
			将多列的值封装map传递:
			column="{key1=column1,key2=column2}"
			fetchType="lazy"：表示延迟加载；
					-lazy:延迟加载
					-eager:立即加载
	 -->
</mapper>